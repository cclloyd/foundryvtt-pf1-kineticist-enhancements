image: node:16.10.0

cache:
  paths:
    - node_modules/

before_script:
  - yarn install

stages:
  - fetch-version
  - build
  - release

fetch-semantic-version:
  # Requires Node >= 10.13 version
  image: node:16.10.0
  stage: fetch-version
  only:
    refs:
      - master
      - alpha
      - /^(([0-9]+)\.)?([0-9]+)\.x/ # This matches maintenance branches
      - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/ # This matches pre-releases
  script:
    - npm install @semantic-release/gitlab @semantic-release/exec
    - npx semantic-release --generate-notes false --dry-run
  artifacts:
    paths:
      - VERSION.txt

generate-non-semantic-version:
  stage: fetch-version
  except:
    refs:
      - master
      - alpha
      - /^(([0-9]+)\.)?([0-9]+)\.x/ # This matches maintenance branches
      - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/ # This matches pre-releases
  script:
    - echo build-$CI_PIPELINE_ID > VERSION.txt
  artifacts:
    paths:
      - VERSION.txt

build:
  stage: build
  script:
    - yarn build
    - mv dist/* ./
  artifacts:
    paths:
      - module.json
      - lang/
      - module/
      - templates/

release:
  image: node:13
  stage: release
  only:
    refs:
      - master
      - alpha
      # This matches maintenance branches
      - /^(([0-9]+)\.)?([0-9]+)\.x/
      # This matches pre-releases
      - /^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/
  script:
    - npm install @semantic-release/gitlab
    - npx semantic-release


#release:
#  stage: release
 # only:
 #   - master
  #image: registry.gitlab.com/gitlab-org/release-cli:latest
  #release:
  #  tag_name: v${MAJOR}_${MINOR}_${REVISION}-alpha

